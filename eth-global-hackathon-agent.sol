//SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.4;

// ========= TOOL INTERFACES ========

interface IAPITool {

    /// @notice describes the various types of input parameters a tool can have.
    ///   Right now, only primitive types are supported.
    enum ParamType {
        STRING,
        INT_ARRAY,
        UINT_ARRAY
    }

    /// @notice Returns the name of this tool, should be short and meaningful. 
    /// @return Name of the tool.
    function name() external view returns (string memory);
    
    /// @notice Returns the description of this tool, when it should be used
    ///   and what it does at a high level.
    /// @return Description of the tool.
    function description() external view returns (string memory);
    
    /// @notice Runs the tool with the given input and returns its final answer
    ///   to the given task.
    /// @param input The input to this tool that is generated by the agent.
    /// @return runId when the tool's execution is synchronous, the runId will be -1.
    ///   When it is asynchronous, a non-negative runId will be returned that will be passed to
    ///   the result handler once the operation is ready.
    /// @return result only present when the tool was executed synchronously and runId is -1.
    ///   Do not use unless the runId returned was -1. 
    function run(string memory input) external returns (int256 runId, string memory result);
}

abstract contract IReadTweetTool is IAPITool {
    struct Tweet {
            uint256 id;
            address author;
            string content;
            uint256 timestamp;
        }

    function name() external pure override returns (string memory) { 
        return "IReadTweetTool";
    }
    
    /// @notice Returns the description of this tool, when it should be used
    ///   and what it does at a high level.
    /// @return Description of the tool.
    function description() external pure override returns (string memory) {
        return "Read tweets from the Twitter API";
    }
}

abstract contract IWriteTweetTool is IAPITool {
    function name() external pure override returns (string memory) { 
        return "IWriteTweetTool";
    }
    
    function description() external pure override returns (string memory) {
        return "Write tweets to the Twitter API";
    }
}

interface writeTweet is IAPITool {
    /// @notice Returns the name of this tool, should be short and meaningful. 
    /// @return Name of the tool.
    function name() external view returns (string memory);
    
    /// @notice Returns the description of this tool, when it should be used
    ///   and what it does at a high level.
    /// @return Description of the tool.
    function description() external view returns (string memory);
    function run(string memory input) external returns (int256 runId, string memory result);
}